#!/usr/bin/env bash

set -o errexit

# Emit event message to "salesorder/created" topic

source ./settings.sh   # configuration
source ./localutils.sh # getservicekey getval gettoken
source ./messaging.sh  # messaging API functions


_build_payload_sales_order_created() {

  yq r -j - << EO_SALES_ORDER_CREATED
type: sap.s4.beh.salesorder.v1.SalesOrder.Created.v1
specversion: "1.0"
source: /default/sap.s4.beh/DEVCLNT001
id: $(uuidgen)
time: $(date '+%Y-%m-%dT%H:%M:%SZ')
datacontenttype: application/json
data:
  SalesOrder: "$1"
EO_SALES_ORDER_CREATED

}

get_authinfo() {

  local sk messaging

  # Retrieve service key and parse out relevant section (messaging)
  sk=$(getservicekey "$instance" "$servicekey")
  messaging=$(getval "$sk" .messaging)
  getval "$messaging" '.[] | select(.broker.type == "saprestmgw")'

}


main() {

  local topic salesordernumber message authinfo oauth

  topic="salesorder/created"
  salesordernumber=$1

  if [[ -z "$salesordernumber" ]]; then
    err "Sales order number must be specified"
    exit 1
  fi

  # Get authorization info (for API endpoint and token requests)
  authinfo=$(get_authinfo)

  # Determine API endpoint (-> uri) and request OAuth token (-> token)
  uri=$(getval "$authinfo" .uri)
  oauth=$(getval "$authinfo" .oa2)
  token=$(gettoken "$oauth")

  # Construct event message & publish to topic
  message=$(_build_payload_sales_order_created "$salesordernumber")
  echo "$message"; exit 0
  publish_message_to_topic "$topic" "$message"

}

main "$@"
